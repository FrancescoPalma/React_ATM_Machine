'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactProptypeConditionalRequire = require('react-proptype-conditional-require');

var _reactProptypeConditionalRequire2 = _interopRequireDefault(_reactProptypeConditionalRequire);

var _config = require('../../../config');

var _decorators = require('../../../decorators');

var Input = (function (_Component) {
    _inherits(Input, _Component);

    function Input() {
        _classCallCheck(this, _Input);

        _get(Object.getPrototypeOf(_Input.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Input, [{
        key: 'render',
        value: function render() {
            var _props = this.props;
            var children = _props.children;
            var className = _props.className;
            var id = _props.id;

            var other = _objectWithoutProperties(_props, ['children', 'className', 'id']);

            return _react2['default'].createElement('input', _extends({
                className: Input.getClasses(this.props),
                ref: _lodash2['default'].camelCase(Input.displayName),
                id: this.props.name,

                role: this.inputRole,
                'aria-required': this.ariaRequired,
                'aria-readonly': this.props.readOnly,
                'aria-checked': this.ariaChecked

            }, other, Input.getEventsBinding(this)));
        }
    }, {
        key: 'inputRole',
        get: function get() {
            return this.props.type === 'checkbox' ? 'checkbox' : 'textbox';
        }
    }, {
        key: 'ariaRequired',
        get: function get() {
            // aria-required is not supported by role="checkbox"
            // https://www.w3.org/TR/wai-aria/roles#checkbox
            return this.props.type === 'checkbox' ? null : this.props.required;
        }
    }, {
        key: 'ariaChecked',
        get: function get() {
            // aria-checked is required for role="checkbox"
            return this.props.type === 'checkbox' ? !!this.props.value : null;
        }
    }], [{
        key: 'getClasses',
        value: function getClasses(props) {
            var block = _config.prefix + '-' + Input.displayName.toLowerCase();
            var extraClasses = props.className.split(' ');

            return (0, _classnames2['default'])(_extends(_defineProperty({}, block, true), Input.getUIClasses(props), _lodash2['default'].fromPairs(_lodash2['default'].map(extraClasses, function (className) {
                return [className, true];
            }))));
        }
    }, {
        key: 'displayName',
        value: 'Input',
        enumerable: true
    }, {
        key: 'propTypes',
        value: _extends({
            'aria-required': (0, _reactProptypeConditionalRequire2['default'])(_react.PropTypes.string, function (props) {
                return !!props.required;
            }),
            'aria-readonly': (0, _reactProptypeConditionalRequire2['default'])(_react.PropTypes.string, function (props) {
                return !!props.readOnly;
            }),

            framework: _react.PropTypes.oneOf(Object.keys(_config.uiFrameworks)).isRequired,

            defaultValue: _react2['default'].PropTypes.string,
            defaultChecked: _react2['default'].PropTypes.bool,
            name: _react2['default'].PropTypes.string.isRequired,
            id: _react2['default'].PropTypes.string,
            value: _react2['default'].PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.bool]),
            type: _react.PropTypes.oneOf(_config.inputTypes),
            className: _react.PropTypes.string,
            required: _react.PropTypes.bool,
            readOnly: _react.PropTypes.bool,
            children: _react.PropTypes.any
        }, _lodash2['default'].fromPairs(_lodash2['default'].map(_config.inputEventNames, function (eventName) {
            return [eventName, _react.PropTypes.func];
        }))),
        enumerable: true
    }, {
        key: 'defaultProps',
        value: _extends({
            className: '',
            type: _lodash2['default'].first(_config.inputTypes),
            framework: _lodash2['default'].head(Object.keys(_config.uiFrameworks))
        }, _lodash2['default'].fromPairs(_lodash2['default'].map(_config.inputEventNames, function (eventName) {
            return [eventName, _lodash2['default'].noop];
        }))),
        enumerable: true
    }, {
        key: 'getEventsBinding',
        value: function value(context) {
            return _lodash2['default'].fromPairs(_lodash2['default'].map(_config.inputEventNames, function (eventName) {
                return [eventName, context.props[eventName].bind(context)];
            }));
        },
        enumerable: true
    }]);

    var _Input = Input;
    Input = (0, _decorators.uiFrameworkClasses)(Input) || Input;
    return Input;
})(_react.Component);

exports['default'] = Input;
module.exports = exports['default'];