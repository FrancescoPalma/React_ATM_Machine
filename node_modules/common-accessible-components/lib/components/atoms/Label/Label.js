'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _config = require('../../../config');

var _decorators = require('../../../decorators');

var Label = (function (_Component) {
    _inherits(Label, _Component);

    function Label() {
        _classCallCheck(this, _Label);

        _get(Object.getPrototypeOf(_Label.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Label, [{
        key: 'render',
        value: function render() {
            var _props = this.props;
            var className = _props.className;
            var required = _props.required;

            var other = _objectWithoutProperties(_props, ['className', 'required']);

            return _react2['default'].createElement(
                'label',
                _extends({
                    className: Label.getClasses(this.props)
                }, other),
                this.props.children
            );
        }
    }], [{
        key: 'displayName',
        value: 'Label',
        enumerable: true
    }, {
        key: 'propTypes',
        value: {
            className: _react.PropTypes.string,
            disabled: _react.PropTypes.bool,
            required: _react.PropTypes.bool,
            children: _react.PropTypes.any.isRequired,
            htmlFor: _react.PropTypes.string.isRequired,
            framework: _react.PropTypes.oneOf(Object.keys(_config.uiFrameworks)).isRequired
        },
        enumerable: true
    }, {
        key: 'defaultProps',
        value: {
            framework: _lodash2['default'].head(Object.keys(_config.uiFrameworks))
        },
        enumerable: true
    }, {
        key: 'getClasses',
        value: function value(props) {
            var block = _config.prefix + '-' + Label.displayName.toLowerCase();
            var extraClasses = props.className && props.className.split(' ');

            return (0, _classnames2['default'])(_extends(_defineProperty({}, block, true), Label.getUIClasses(props), _lodash2['default'].fromPairs(_lodash2['default'].map(extraClasses, function (className) {
                return [className, true];
            }))));
        },
        enumerable: true
    }]);

    var _Label = Label;
    Label = (0, _decorators.uiFrameworkClasses)(Label) || Label;
    return Label;
})(_react.Component);

exports['default'] = Label;
module.exports = exports['default'];