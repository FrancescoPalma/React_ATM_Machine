'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

var _argvSetEnv = require('argv-set-env');

var _argvSetEnv2 = _interopRequireDefault(_argvSetEnv);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _createWebpackConfig = require('./createWebpackConfig');

var _createWebpackConfig2 = _interopRequireDefault(_createWebpackConfig);

var _debug = require('./debug');

var _debug2 = _interopRequireDefault(_debug);

var _getPluginConfig = require('./getPluginConfig');

var _getPluginConfig2 = _interopRequireDefault(_getPluginConfig);

var _getUserConfig = require('./getUserConfig');

var _getUserConfig2 = _interopRequireDefault(_getUserConfig);

exports['default'] = function (args, buildConfig, cb) {
  if (buildConfig === undefined) buildConfig = {};

  // Don't override NODE_ENV if it's already set
  if (!process.env.NODE_ENV) {
    // Set cross-platform environment variables based on --set-env-NAME arguments
    _argvSetEnv2['default']();
    // Default environment setting for a build
    if (!process.env.NODE_ENV) {
      process.env.NODE_ENV = 'production';
    }
  }

  var userConfig = _getUserConfig2['default'](args);
  var pluginConfig = _getPluginConfig2['default']();
  if (typeof buildConfig == 'function') {
    buildConfig = buildConfig();
  }

  _assert2['default'](buildConfig.entry, 'entry config is required to create a Webpack build');
  _assert2['default'](buildConfig.output, 'output config is required to create a Webpack build');

  var webpackConfig = _createWebpackConfig2['default'](_extends({}, buildConfig, {
    server: false
  }), pluginConfig, userConfig.webpack);

  _debug2['default']('webpack config: %o', webpackConfig);

  var compiler = _webpack2['default'](webpackConfig);
  compiler.run(function (err, stats) {
    if (err) return cb(err);
    console.log(stats.toString({
      children: false,
      chunks: false,
      colors: true,
      modules: false
    }));
    cb();
  });
};

module.exports = exports['default'];